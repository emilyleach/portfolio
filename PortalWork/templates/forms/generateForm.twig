{% extends "page.twig" %}
{% import "macros/formGeneratorMacro.twig" as formGeneratorMacro %}
{% import "macros/statusMacros.html.twig" as statusMacros %}

{% set student = submission.studentId | default('') %}
{% if student %}{% set student = student ~ ' | ' %}{%  endif %}
{% if submission %}{% set editingDisabled = true %}{% endif %}
{% set pageTitle = student ~ form.name %}

{% block body %}

<main>

	{# Display current step #}
	{% if step %}
		<div class="callout callout-warning">
			<h3>{{ step.stepDefinition.name }}</h3>
			<p>{{ step.stepDefinition.instructions }}</p>
			<form action="/step/process" method="post" id="{{ step.id }}" class="needs-validation" novalidate>
				<input type="hidden" name="stepId" id="stepId" value="{{ step.id }}">
				<input type="hidden" name="formId" id="formId" value="{{ form.id }}">
				<input type="hidden" name="formSubmissionId" id="formSubmissionId" value="{{ submission.id }}">
				{% for attribute in step.stepDefinition.attributes %}
					{{ formGeneratorMacro.generateFormElementForAttribute(step, attribute) }}
				{% endfor %}
				{% for status in step.stepDefinition.applicableStatuses %}
					{% if status.isDeleted == false %}
						{{ statusMacros.generateStatusButton(status) }}
					{% endif %}
				{% endfor %}
			</form>
		</div>
		<br>
	{% endif %}

	{#	Show History #}
	{% if isGranted(['FORM_VIEW_HISTORY'], submission) %}
	{% if submission.id %} {#  Only Show History if already submitted  #}
		{% if journeyHeader %}
			<div class="accordion-item ui-sortable sortable-holder" data-sortable-type="journey">
				<div class="accordion-header handle">
					<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#journey_accordion" aria-expanded="true" aria-controls="journey_accordion">Journey Overview</button>
				</div>
				<div class="multi-collapse collapse configuration" id="journey_accordion">
					<div class="accordion-body">
						{{ journeyHeader | raw }}
					</div>
				</div>
			</div>
		{% endif %}
			<div class="accordion-item ui-sortable sortable-holder" data-sortable-type="step">
				<div class="accordion-header handle">
					<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#history_accordion" aria-expanded="true" aria-controls="history_accordion">History</button>
				</div>
				<div class="multi-collapse collapse show configuration" id="history_accordion">
					<div class="accordion-body">
						<div class="callout">
							<h5>Initial Submission</h5>
							submitted on {{ submission.createdDateTime | date("n/j/Y h:i a", 'America/New_York') }} ({{ submission.createdDateTime | timeAgo }}) by {{ submission.person.fullName }}
						</div>
						{% if submission.approvalFlows[0].steps %}
							{%  for step in submission.approvalFlows[0].steps| sort((a, b) => a.stepOrder <=> b.stepOrder) %}
								{% for response in step.stepResponses %}
									<div class="callout">
										<h5>
											{{ statusMacros.generateStatusBadge(response.status) }}
											{{ step.stepDefinition.name }}
											{% if isGranted(['GLOBAL_TECH_DEBUG']) %}
												[StepId: {{ step.id }}][StepResponseId: {{ response.id }}]
											{% endif %}
										</h5>

										completed{% if isGranted(['FORM_PRIVILEGED_VIEW'], submission) %} by {{ response.person.fullName }}{% endif %} on {{  response.createdDateTime | date("n/j/Y h:i a", 'America/New_York') }} ({{ response.createdDateTime | timeAgo }})
										{% for attribute in step.stepDefinition.attributes %}
											{{ formGeneratorMacro.generateFormElementForAttribute(step, attribute, response.attributeValues,"",true) }}
										{% endfor %}

									</div>
								{% endfor %}
								{%  if step.state.value in ['running','not-started'] %}
									<div class="callout">
										<h5>
											{{ step.stepDefinition.name }}
											{% if isGranted(['GLOBAL_TECH_DEBUG']) %}
												[StepId: {{ step.id }}] <a href="/approval/step/{{ step.id }}/restart"><i class="fa-solid fa-arrow-rotate-right"></i></a>
											{% endif %}
										</h5>
										{%  if step.state.value == 'running' %}
											Awaiting Response
											{% if isGranted(['FORM_PRIVILEGED_VIEW'], submission) %}
												from the following:
												{% for assignment in step.stepAssignments |filter(v => v.isActive == true) %}
													{{ assignment.person.fullName }}{% if not loop.last %}, {% endif %}
												{% endfor %}
											{% endif %}
										{%  elseif step.state.value == 'skipped' %}
											Not Needed
										{% else %}
											Pending Prior Step Completion
										{% endif %}
									</div>
								{% endif %}
							{% endfor %}
						{% endif %}
					</div>
				</div>
			</div>
			<div class="accordion-item ui-sortable sortable-holder" data-sortable-type="attributes">
				<div class="accordion-header handle">
					<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#attributes_accordion" aria-expanded="true" aria-controls="attributes_accordion">{{ submission.approvalFlows[0].approvalFlowDefinition.attributeTitleOverride | default("Approval Flow Attributes") }}</button>
				</div>
				<div class="multi-collapse collapse configuration" id="attributes_accordion">

					<div class="accordion-body">
						{% if isGranted(['FORM_VIEW_APPROVAL_ATTRIBUTES'], submission) %}
							{% set editingDisabled = true %}
							{% if isGranted(['FORM_EDIT_APPROVAL_ATTRIBUTES'], submission) %}
								{% set editingDisabled = false %}
							{% endif %}
							{% for approvalFlow in submission.approvalFlows %}
								{% if approvalFlow.approvalFlowDefinition.attributes %}
									{% for attribute in approvalFlow.approvalFlowDefinition.attributes %}
										{{ formGeneratorMacro.generateFormElementForAttribute(submission, attribute, approvalFlow.attributeValues, false, true) }}

									{% endfor %}
								{% endif %}
							{% endfor %}
						{% endif %}
					</div>
				</div>
			</div>
			<h2 class="submission-header">Original Submission: </h2>

		{% endif %}
	{% endif %}

	{% set header = form.formHeader %}
	{{ header|raw }}
	<hr>

	<form action="/form/process" method="POST" id="{{ form.id }}" enctype="multipart/form-data" class="needs-validation" novalidate>
		<fieldset>
			<input type="hidden" id="formType" name="formId" value="{{ form.id }}">
			{% if accomplishment %}
				<input type="hidden" id="accomplishmentId" name="accomplishmentId" value="{{ accomplishment.id }}">
			{% endif %}
			{% for attribute in form.attributes| sort((a, b) => a.displayOrder <=> b.displayOrder)  %}
				{{ formGeneratorMacro.generateFormElementForAttribute(accomplishment, attribute, submission.attributeValues,"", editingDisabled) }}
			{% endfor %}
			{% if not submission.id %}
				<input class="btn btn-primary submit-button" type="submit" name="Submit" id="Submit" value="Submit">
				<button class="btn btn-outline-primary submit-button-dummy" disabled="disabled" style="display: none;" name="SubmitDummy" id="SubmitDummy" value="Submit">Submit</button>
			{% endif %}
		</fieldset>
	</form>

	<script src="/assets/js/conditionalFormScript.js" type="text/javascript"></script>
	<script>
		//Makes a value for the Form with the Username and Timestamp
		$(document).ready(function(){
			$(document).on('submit','form',function(){ $('.submit-button').hide(); $('.status-button').hide(); $('.submit-button-dummy').show(); return true; }); // why not just prop disable them?
			let $timestamp = Math.floor(Date.now() / 1000);

			$('#formSubmission').val($('#formSubmission').val() + "-" + $timestamp );
		});
	</script>
	<script src="/assets/js/editTableScript.js" type="text/javascript"></script>
</main>
{% endblock %}

